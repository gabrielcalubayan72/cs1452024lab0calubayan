from sys import stderr

from cs145lib.task0 import Channel, node_main

#huffman coding generated by pasting corpus in https://planetcalc.com/8087/
huffmanOfCorpus = {
    'a' : 0b1011,
    'b' : 0b011111,
    'c' : 0b11110,
    'd' : 0b11000,
    'e' : 0b001,
    'f' : 0b000110,
    'g' : 0b00010,
    'h' : 0b110011,
    'i' : 0b1110,
    'j' : 0b000111001,
    'k' : 0b0001111,
    'l' : 0b11111,
    'm' : 0b00000,
    'n' : 0b1001,
    'o' : 0b0110,
    'p' : 0b00001,
    'q' : 0b000111010,
    'r' : 0b1010,
    's' : 0b1101,
    't' : 0b1000,
    'u' : 0b01110,
    'v' : 0b1100101,
    'w' : 0b1100100,
    'x' : 0b000111011,
    'y' : 0b011110,
    'z' : 0b0001110001,
    ' ' : 0b111111,
    '-' : 0b1111111
}


def sender(channel: Channel, sentence: str) -> None:

    print("This is an example debugging print from the sender.", file=stderr)

    # example: send 69*5 bits
    for it in range(69):
        for bit in 1, 0, 1, 1, 0:
            channel.send(bit)


def receiver(channel: Channel) -> str:

    print("This is an example debugging print from the receiver.", file=stderr)

    # example: read 69 bits, and replace 0 with '.', and 1 with 'X'
    return ''.join(('X' if channel.get() else '.') for it in range(69))


if __name__ == '__main__':
    node_main(sender=sender, receiver=receiver)
